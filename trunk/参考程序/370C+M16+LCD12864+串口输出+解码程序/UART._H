/*******************************************
函数名称: Uart_init
功    能: 异步串口初始化
参    数: baud--设置的波特率
返回值  : 无
/********************************************/
void Uart_init(uint baud)			  			 	  
{ 
   baud=MCLK/16/baud-1;				      //波特率最大为65K
   UCSRB=0x00; 
   UCSRA=0x00; 						 	  //控制寄存器清零
   UCSRC=(1<<URSEL)|(0<<UPM0)|(3<<UCSZ0); //选择UCSRC，异步模式，禁止校验，1位停止位，8位数据位
   UBRRL=baud; 					     	  
   UBRRH=baud>>8; 						  //设置波特率
   UCSRB=(1<<TXEN)|(1<<RXEN)|(1<<RXCIE);  //接收、发送使能，接收中断使能
   SREG=(1<<7);							  //全局中断开放
   DDRD|=0X02;							  //配置TX为输出（很重要）
}
/*******************************************
函数名称: Uart_sendB
功    能: 异步串口发送一个字节
参    数: sendB--发送的字节数据
返回值  : 无
/********************************************/
void Uart_sendB(uchar sendB)
{
 while(!(UCSRA&(1<<UDRE)));		 //等待发送缓冲区为空
 UDR=sendB;						 //发送数据
 while(!(UCSRA&(1<<TXC)));		 //等待发送完毕
 UCSRA|=1<<TXC;					 //清除发送完毕状态位
}
/*******************************************
函数名称: Uart_sentstr
功    能: 异步串口发送一个字符串
参    数: sendpt--发送的数组指针
返回值  : 无
/********************************************/
void Uart_sentstr(uchar *sendpt)		
{
    while(*sendpt)				//字符串未结束则继续发送
	{
	 Uart_sendB(*sendpt++);
	}
}
/*******************************************
函数名称: Uart_sentstr_Array
功    能: 异步串口发送一个字符串
参    数: p--发送的数组指针
返回值  : 无
/********************************************/
void Uart_sentstr_Array(uchar *p,uchar len)		
{
    uchar i;
	for(i=0;i<len;i++)          //控制字符个数
	{
	 Uart_sendB(*p++);
	}
}
#pragma interrupt_handler Uart_RX:12  //串口接收中断函数声明
/*******************************************
函数名称: Uart_RX
功    能: 异步串口接收
参    数: 无
返回值  : 无
/********************************************/
void Uart_RX(void)
{
   Get_Data();
}